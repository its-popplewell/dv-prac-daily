# using Distributions, StatsBase, DataFrames, PyPlot, LinearAlgebra, Permutations, Combinatorics

# FIGPATH = "~/dev/current_projects/research/23X/plots"

# # here I'm showing the difference
# n = 10^5
# θ = 1 # smallest number generated by pareto distribution



# fig, axs = plt.subplots(figsize=(5,1),ncols=2,sharey=true)

# ax = axs[1]
# for k in 1:5
#     X = rand(Pareto(1.1,θ),n)
#     ax.plot(cumsum(X[100:end])./ collect(100:n))
# end
# ax.set_title(L"$\alpha=1.1$")
# ax.set_xlabel("n")
# ax.set_ylabel(L"$\hat{\mu}_n$")



# ax = axs[2]
# for k in 1:5
#     X = rand(Pareto(2.2,θ),n)
#     ax.plot(cumsum(X[100:end])./ collect(100:n))
# end
# ax.set_title(L"$\alpha=2.2$")
# ax.set_xlabel("n")
# ax.set_ylabel(L"$\hat{\mu}_n$")

# plt.savefig(FIGPATH*"/running_sums.pdf",bbox_inches="tight")
# fig

# # --------

# reps = 1000
# n = 10^3
# α_range = collect(1:0.01:2)

# fig,ax = plt.subplots(figsize=(5,2))

# ax.loglog(α_range,[std(mean(rand(Pareto(α,θ),(reps,n)),dims=2))/sqrt(reps) for α in α_range],".")
# ax.loglog(α_range, 1 ./α_range .^7,"k--")
# ax.set_xlabel(L"$\alpha$")
# ax.set_ylabel(L"$\sqrt{{\rm var}(\hat{mu}_n)/n}$")

# plt.savefig(FIGPATH*"/mun_err.pdf",bbox_inches="tight")
# fig
#

using Distributions, Gadfly, Cairo, Fontconfig
FIGPATH::String = "~/dev/current_projects/research/23X/plots";

n::Int = 10^5
θ::Int = 1

# hstack sideways

x_l::Vector{Int} = collect(100:n)
ys::Vector{Vector{Number}} = Vector{Vector{Number}}();
for i in 1:5
  X = rand(Pareto(1.1,θ),n)
  # df.version = cumsum(X[100:end]) ./ collect(100:n)
  push!(ys, cumsum(X[100:end]) ./ collect(100:n))
end

h2 = plot(
  layer(x=x_l, y=ys[1], Geom.line, Theme(default_color=color("orange"))),
  layer(x=x_l, y=ys[2], Geom.line, Theme(default_color=color("purple"))),
  layer(x=x_l, y=ys[3], Geom.line, Theme(default_color=color("red"))),
  layer(x=x_l, y=ys[4], Geom.line, Theme(default_color=color("yellow"))),
  layer(x=x_l, y=ys[5], Geom.line, Theme(default_color=color("blue"))),
)

# h2 = plot(x=1:10, y=1:10)

img = PDF("output.pdf", 10inch, 6inch)
draw(img, h2)
# h2 |> PNG("test.png", 5inch, 3inch)
